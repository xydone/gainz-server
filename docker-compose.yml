version: "3.8"

services:
  prod_postgres:
    profiles: [prod]
    image: postgres:16.1
    container_name: gainz_db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      LANG: "en_US.utf8"
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-scripts/postgres:/docker-entrypoint-initdb.d
      - ./docker-scripts/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"

  test_postgres:
    profiles: [test]
    image: postgres:16.1
    container_name: testing_db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: TEST_${DATABASE_NAME}
      LANG: "en_US.utf8"
    ports:
      - "9988:5432"
    volumes:
      - test_pgdata:/var/lib/postgresql/data
      - ./docker-scripts/postgres:/docker-entrypoint-initdb.d
      - ./docker-scripts/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"

  redis:
    image: redis:latest
    container_name: gainz_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  pgdata:
  test_pgdata:
  redis_data:
